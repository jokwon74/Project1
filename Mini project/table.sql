-- employee
CREATE TABLE EMPLOYEE (
    EMP_ID number GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,                     -- ID
    EMP_NAME   varchar2(10),                                                        -- 사원 이름
    EMP_PHONE  varchar2(20),                                                        -- 전화번호
    EMP_BIRTH  varchar2(15),                                                        -- 생년월일
    EMP_EMAIL  varchar2(50),                                                        -- 이메일
    DEPT_CODE  varchar2(10),                                                        -- 부서코드
    JOB_CODE   varchar2(10),                                                        -- 직급코드
    HIRE_DATE  date                                                                 -- 입사일
);

-- 출퇴근
CREATE TABLE COMMUTE (
    EMP_ID        NUMBER REFERENCES EMPLOYEE(EMP_ID) ,                              -- 사원ID
    STARTTIME     DATE NOT NULL,                                                    -- 출근날짜
    ENDTIME       DATE,                                                             -- 퇴근날짜
    BUSINESS_TRIP VARCHAR2(1) check (BUSINESS_TRIP IN('Y','N')),                    -- 출장여부
    LEAVE         VARCHAR2(1) check (LEAVE IN('Y','N')) primary key                 -- 휴가여부
);

-- ID/PW
CREATE TABLE LOGIN (
    EMP_ID        NUMBER REFERENCES EMPLOYEE(EMP_ID),                               -- ID
    EMP_PW        VARCHAR2(15)                                                      -- PW
);

-- 근태 테이블(ATTENDANCE)
CREATE TABLE ATTENDANCE(
LEAVE number,                                                           			-- 휴가
ANNUALPAIDLEAVE number,                                                             -- 연차
OVERTIME number,                                                                    -- 야근
whatday date,                                                                       -- 날짜
AVAILABILITY varchar2(1)  check (AVAILABILITY IN('Y', 'N')),                        -- 휴가 사용 여부

 FOREIGN KEY (AVAILABILITY) REFERENCES COMMUTE(COMMUTE)
);

-- 직급 테이블(POSITION_RANK) 
CREATE TABLE POSITION_RANK(
JOB_CODE varchar2(10) REFERENCES EMPLOYEE(JOB_CODE),                                -- 직급코드
POSITION varchar2(10)                                                               -- 직급
);

-- 출장지 테이블(BUSINESS_TRIP_DESTINATION)
CREATE TABLE BUSINESS_TRIP_DESTINATION(
PLACE_CODE varchar2(10),                                                            -- 출장코드
PLACE varchar2(10)                                                                  -- 출장지
);

-- 출장 테이블(BUSINESS_TRIP)
CREATE TABLE BUSINESS_TRIP(
whatday date,                                                                       -- 출장날짜
PLACE_CODE varchar2(10) REFERENCES BUSINESS_TRIP_DESTINATION(PLACE) ,               -- 출장코드
EMP_ID number references employee(EMP_ID),                                          -- ID
WHETHER varchar2(1) check (whether in('Y', 'N')) not null,                          -- 출장 여부

foreign key (WHETHER) REFERENCES COMMUTE(BUSINESS_TRIP)
);

--부서
CREATE TABLE department (
    dept_id   VARCHAR2(10) REFERENCES employee(DEPT_CODE),                          -- 부서코드
    dept_name VARCHAR2(10)                                                          -- 부서명
);
--급여
CREATE TABLE salary(
    EMP_ID NUMBER REFERENCES EMPLOYEE(EMP_ID),                                      -- ID
    SALARY NUMBER,                                                                  -- 연봉
    monthLY_pay NUMBER,                                                             -- 월급
    BONUS NUMBER                                                                    -- 보너스
);
--보고
CREATE TABLE REFORT(
    TITLE VARCHAR2(50),                                                             -- 보고서 제목
    CONTENT VARCHAR2(100),                                                          -- 보고서 내용
    FROM_ID NUMBER REFERENCES EMPLOYEE(EMP_ID),                                     -- 작성자
    TO_ID NUMBER REFERENCES EMPLOYEE(EMP_ID),                                       -- 받는이
    WHATDATE date                                                                   -- 날짜
);

--공지
CREATE TABLE NOTICE(
    TITLE VARCHAR2(50),                                                             -- 공지 제목
    CONTENT VARCHAR2(100),                                                          -- 공지 내용
    WRITER_ID NUMBER REFERENCES EMPLOYEE(EMP_ID),                                   -- 작성자
    WRITE_DATE DATE                                                                 -- 작성일
);